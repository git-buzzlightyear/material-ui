import { type ApiTableRow } from '@site/components/ApiTable';

export const rows: ApiTableRow[] = [
  {
    prop: 'value',
    desc: 'textarea value',
    type: 'string',
    required: false,
    default: '-',
  },
  {
    prop: 'placeholder',
    desc: 'textarea placeholder',
    type: 'string',
    required: false,
    default: '-',
  },
  {
    prop: 'rows',
    desc: 'number of textarea rows',
    type: 'number',
    required: false,
    default: '3',
  },
  {
    prop: 'maxLength',
    desc: 'maximum number of characters',
    type: 'number',
    required: false,
    default: '-',
  },
  {
    prop: 'resize',
    desc: 'textarea resize',
    type: 'tag: none | both | horizontal | vertical',
    required: false,
    default: 'both',
  },
  {
    prop: 'disabled',
    desc: 'whether to disable textarea',
    type: 'boolean',
    required: false,
    default: 'false',
  },
  {
    prop: 'status',
    desc: 'textarea status',
    type: 'tag: error | warn | readonly',
    required: false,
    default: '-',
  },
  {
    prop: 'allowClear',
    desc: 'whether to allow textarea clear',
    type: 'boolean',
    required: false,
    default: 'false',
  },
  {
    prop: 'autoHeight',
    desc: 'whether to auto-adjust textarea height',
    type: 'boolean',
    required: false,
    default: 'false',
  },
  {
    prop: 'className',
    type: 'string',
    required: false,
    default: '-',
  },
  {
    prop: 'style',
    type: 'React.CSSProperties',
    required: false,
    default: '-',
  },
  {
    prop: 'onChange',
    desc: 'change event of Textarea',
    type: '(e: React.ChangeEvent<HTMLTextAreaElement>) => void',
    required: 'false',
    default: '-',
  },
  {
    prop: 'onInput',
    desc: 'input event of Textarea',
    type: '(e: React.FormEventHandler<HTMLTextAreaElement>) => void',
    required: 'false',
    default: '-',
  },
  {
    prop: 'onBlur',
    desc: 'blur event of Textarea',
    type: '(e: React.FocusEventHandler<HTMLTextAreaElement>) => void',
    required: 'false',
    default: '-',
  },
  {
    prop: 'onFocus',
    desc: 'focus event of Textarea',
    type: '(e: React.FocusEventHandler<HTMLTextAreaElement>) => void',
    required: 'false',
    default: '-',
  },
];
