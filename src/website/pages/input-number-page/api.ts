import { type ApiTableRow } from '@site/components/ApiTable';

export const rows: ApiTableRow[] = [
  {
    prop: 'value',
    desc: 'input value',
    type: 'tag:number | null',
    required: false,
    default: '-',
  },
  {
    prop: 'size',
    desc: 'input size',
    type: 'tag: tiny | small| medium | large',
    required: false,
    default: 'medium',
  },
  {
    prop: 'placeholder',
    desc: 'input placeholder',
    type: 'string',
    required: false,
    default: '-',
  },
  {
    prop: 'step',
    desc: 'input step',
    type: 'number',
    required: false,
    default: '1',
  },
  {
    prop: 'min',
    desc: 'input min value',
    type: 'number',
    required: false,
    default: '-Infinity',
  },
  {
    prop: 'max',
    desc: 'input max value',
    type: 'number',
    required: false,
    default: 'Infinity',
  },
  {
    prop: 'disabled',
    desc: 'whether set input disabled',
    type: 'boolean',
    required: false,
    default: 'false',
  },
  {
    prop: 'status',
    desc: 'input status',
    type: 'tag: error | warn | readonly',
    required: false,
    default: 'false',
  },
  {
    prop: 'keyboard',
    desc: 'whether enable using keyboard arrow to change input value',
    type: 'boolean',
    required: false,
    default: 'true',
  },
  {
    prop: 'className',
    type: 'string',
    required: false,
    default: '-',
  },
  {
    prop: 'style',
    type: 'React.CSSProperties',
    required: false,
    default: '-',
  },
  {
    prop: 'onChange',
    desc: 'change event of input',
    type: '(value: number | null) => void;',
    required: 'false',
    default: '-',
  },
  {
    prop: 'onInput',
    desc: 'input event of input',
    type: '(value: number | null) => void;',
    required: 'false',
    default: '-',
  },
  {
    prop: 'onBlur',
    desc: 'blur event of input',
    type: '(e: React.FocusEventHandler<HTMLInputElement>) => void',
    required: 'false',
    default: '-',
  },
  {
    prop: 'onFocus',
    desc: 'focus event of input',
    type: '(e: React.FocusEventHandler<HTMLInputElement>) => void',
    required: 'false',
    default: '-',
  },
  {
    prop: 'onStep',
    desc: 'step event of input',
    type: "(value: number, option: { step: number; type: 'increase' | 'decrease' }) => void",
    required: false,
    default: '-',
  },
];
